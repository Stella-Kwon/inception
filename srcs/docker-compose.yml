name : 
  inception
services:
  nginx: 
    # image: nginx:1.24-alpine :  this is for using images from opensource from github : specify which version 
    # so you don't need seperate Dockerfile to be exist
    
    #  but if you want your own custom image to build through dockerfile then you us build.
    build: 
        context: ./requirements/nginx
        dockerfile: Dockerfile
        args: #you need args to send it to use in dockerfile at runtime build
          DOMAIN_NAME: ${DOMAIN_NAME}
          SSL_CERTS: ${SSL_CERTS}
    image: nginx
    container_name: nginx 
    #다른 컨테이너와도 같이 사용할때는 굳이 incpetion을 붙히지않아도 되지만 
    #여러 프로젝트와 연결되어 사용되면 주로 proxy_nginx와 같이 사용.
    #현재는 incpetion에서만 사용하기 때문에 (하나의 도메인 + 443포트 연결) incpetion을 붙힌다.
    ports:
      #but now i am using port 443 fot the vm host to connect my real host so i cannot use 443 now
      - 5000:443
      # - "443:443" #HTTPS rediects : Then Docker automatically binds port 443 on the host to port 443 in the container.
      # - "80:80" HTTP redirects
    volumes:
      #Nginx needs to access the WordPress files (PHP files, images, CSS, etc.) to serve them
      #standard achitecture for Nginx to serve static files and pass PHP requests to PHP-FPM
      - wordpress_vol:/var/www/html #웹 관련 파일을 저장할 디렉토리
      - ./requirements/nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      # - ./requirements/nginx/conf/conf.d:/etc/nginx/conf.d #추가적으로 설정파일을 넣을경우 사용
    networks:
      - inception
    depends_on:
      wordpress:
        condition: service_healthy
    restart: always
    env_file:
      - .env
    ## you need this to use variable in runtime
    environment:
      DOMAIN_NAME: ${DOMAIN_NAME}
      SSL_CERTS: ${SSL_CERTS}
# MariaDB 설정 파일 내에서 서버 시작을 기다리는 스크립트와 함께 이 Docker healthcheck를 사용하면 시스템의 안정성이 크게 향상됩니다. 
# 두 가지 접근 방식은 서로 다른 레벨에서 작동하기 때문에 상호 보완적입니다:
    # MariaDB 컨테이너의 healthcheck는 Docker 시스템에게 컨테이너가 정상인지 알려줍니다.
    # MariaDB 설정 스크립트 내의 대기 로직은 스크립트가 (데이터베이스가)실행될 때 서버가 준비되었는지 확인합니다.
    healthcheck:
      test: ["CMD", "bash", "-c", "curl -f https://nginx/wp-admin/ || exit 1"]

  wordpress:
    build:
        context:  ./requirements/wordpress
        dockerfile: Dockerfile
    image: wordpress
    container_name: wordpress
    volumes:
      # WordPress needs to write to the volume to save data like configuration, plugins, themes, etc. 
      - wordpress_vol:/var/www/html #전체 파일 말고 / there is file that recreated when container gets restarted : but you need this to access every data for the nginx
      # wp-content 폴더만 볼륨으로 사용/ DB만 있으면 동일한 사이트를 복원 가능.
      # wp-content 폴더가 /var/www/html 안에 자동으로 생김.
      - wordpress_content:/var/www/html/wordpress/wp-content 
      # - ./requirements/wordpress/wp-config.php:/var/www/html/wp-config.php
      # - ./requirements/wordpress/plugins:/var/www/html/wp-content/plugins
      # - ./requirements/wordpress/themes:/var/www/html/wp-content/themes
    networks:
      - inception
    depends_on:
      mariadb:
        condition: service_healthy
    restart: always
    env_file:
      - .env
    # 단순히 PHP-FPM이 실행 중인지가 아니라 WordPress가 실제로 웹 요청에 응답하는지 확인합니다.
    healthcheck:
      test: ["CMD", "sh", "-c", "nc -z localhost 9000 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3

      
  mariadb:
    build:
        context: ./requirements/mariadb
        dockerfile: Dockerfile
    image: mariadb
    container_name: mariadb
    volumes:
      - mariadb_vol:/var/lib/mysql #웹 관련 데이터를 저장할 디렉토리
    networks:
      - inception
    restart: always
    env_file:
      - .env
    healthcheck: # this only tells to docker it is ready or not
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s   # Check every 10 seconds
      timeout: 10s   # Give 10 seconds for a response before failing
      retries: 10  #Retry 10 times before marking unhealthy
      start_period: 30s  # Give MariaDB more time to initialize


#########################################################
volumes:  
  wordpress_vol:
  #you need to still specify all the volumes in volumes section even you dont need any additional specific
  wordpress_content:
    driver: local
    driver_opts:
      type: none
      device: ~/data/wordpress
      o: bind
  mariadb_vol:
    driver: local
    driver_opts:
      type: none
      device: ~/data/mariadb
      o: bind
# type: none: 호스트 파일 시스템의 특정 디렉토리를 볼륨으로 사용하도록 지정합니다.
# device: 호스트 파일 시스템의 경로를 지정합니다.
# o: bind: 바인드 마운트를 사용하도록 지정합니다.

############################################################
networks:
  inception:
    name: inception_network
    driver: bridge
