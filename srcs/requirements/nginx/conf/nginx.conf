#Nginx 전체 설정 파일

user www-data;
worker_processes auto;                   # CPU 코어 수에 따라 자동 조정
pid /run/nginx/nginx.pid;                # PID 파일 위치

# 이벤트 설정
events {
    worker_connections 1024;             # 워커 프로세스당 최대 연결 수
    multi_accept on;                     # 한 번에 여러 연결 수락 (성능 향상)
}

# HTTP 설정
http {
    # 기본 설정
    include /etc/nginx/mime.types;       # MIME 타입 설정
    default_type application/octet-stream;
    
    # 성능 최적화
    sendfile on;                         # 파일 전송 최적화
    tcp_nopush on;                       # TCP 패킷 최적화
    tcp_nodelay on;                      # 작은 패킷 지연 방지
    keepalive_timeout 65;                # 연결 유지 시간
    types_hash_max_size 2048;
    server_tokens off;                   # Nginx 버전 숨김 (보안)
    
    # 버퍼 설정
    client_max_body_size 64m;            # 큰 파일 업로드 허용
    client_body_buffer_size 128k;
    
    # Gzip 압축
    gzip on;
    gzip_comp_level 5;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_vary on;
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;

# 서버 설정시 nginx는 여러개의 서버 블록을 가질 수 있음


# 각 서버 블록은 하나의 도메인 또는 IP 주소에 대한 설정을 가짐

# 서브도메인으로 서버 블록을 나누어 설정할 수 있음
# www.example.com, blog.example.com, api.example.com 등 서브도메인에 따라 다른 설정을 할 수 있음
# 프론트엔드 (React, Vue 등)
# server {
#     listen 80;
#     server_name web.example.com;

#     location / {
#         root /var/www/frontend;
#         index index.html;
#         try_files $uri /index.html;
#     }
# }

# # 백엔드 API (Node.js)
# server {
#     listen 5000;
#     server_name api.example.com;

#     location / {
#         proxy_pass http://localhost:3000;  # 백엔드 서버
#     }
# }

# 도메인 또는 포트 번호에 따라 다른 서버 블록을 사용할 수 있음
# 서버 블록은 여러 개의 location 블록을 가질 수 있음
# location 블록은 특정 URL 경로에 대한 설정을 가짐 : 즉 www.example.com/about 경로에 대한 설정을 따로 할 수 있음

    # # HTTP 연결 거부 (보안 강화)
    # server {
    #     listen 80;
    #     listen [::]:80;
    #     server_name _;
    #     return 301 https://$host$request_uri;  # HTTP → HTTPS 리다이렉트
    # }
    
    # HTTPS 서버 설정
    server {
        listen 443 ssl http2; # HTTP/2 활성화로 성능 향상
        listen [::]:443 ssl http2;
        
        server_name ${DOMAIN_NAME};   # 도메인 이름 설정
        
        # SSL 설정
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_certificate /etc/nginx/ssl/certificate.crt;
        ssl_certificate_key /etc/nginx/ssl/certificate.key;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;
        
        # 현대적인 TLS 설정
        ssl_prefer_server_ciphers off;
        
        # OCSP Stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        
        # 보안 헤더
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        
        # 루트 디렉토리 및 기본 파일
        root /var/www/html/wordpress;
        index index.php index.html;
        
        # 기본 위치 설정
        location / {
            try_files $uri $uri/ /index.php?$args;
        }
        
        # PHP 처리
        location ~ \.php$ {
            try_files $uri /index.php = 404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass wordpress:9000;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_intercept_errors on;
            fastcgi_buffer_size 128k;
            fastcgi_buffers 4 256k;
            fastcgi_busy_buffers_size 256k;
        }
        
        # 정적 파일 캐싱
        location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
            expires 30d;
            add_header Cache-Control "public, no-transform";
        }
        
        # .htaccess 파일 접근 거부
        location ~ /\.ht {
            deny all;
        }
    }
}
